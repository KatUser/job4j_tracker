В конфигурации приложения задаём
-XX:+UseSerialGC -Xlog:gc Используем самый простой сборщик мусора
-Xmx16m -Xms16m  размер heap

Запускаем приложение, в  терминале получаем pid командой jps:
PS C:\projects\job4j_tracker> jps

С полученным pid выполняем  команду jmap -histo <pid>
PS C:\projects\job4j_tracker> jmap -histo <pid>

1. Выполняем  команду jmap -histo <pid> сразу же после запуска приложения.
Наблюдаем создание 108206  сущностей, используется 622_9368 байтов для процесса.

2. Выполняем  команду jmap -histo <pid> после создания 10_000 заявок.
Увеличилось кол-во сущностей  до 289_909, задействовано 117_32040 байтов.

3. Выполняем  команду jmap -histo <pid> после удаления 10_000 заявок.
Почистился heap, осталось 246_608 сущностей, используется 995_6464 байтов.

4. Создаём 100_000 заявок и пробуем их удалить.
Приложение падает с ошибкой Exception in thread "main" java.lang.OutOfMemoryError: Java heap space, GС не успевает освободить память.